{
  "name": "passport-twitter",
  "version": "1.0.4",
  "description": "Twitter authentication strategy for Passport.",
  "keywords": [
    "passport",
    "twitter",
    "auth",
    "authn",
    "authentication",
    "identity"
  ],
  "author": {
    "name": "Jared Hanson",
    "email": "jaredhanson@gmail.com",
    "url": "http://www.jaredhanson.net/"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/jaredhanson/passport-twitter.git"
  },
  "bugs": {
    "url": "http://github.com/jaredhanson/passport-twitter/issues"
  },
  "license": "MIT",
  "licenses": [
    {
      "type": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    }
  ],
  "main": "./lib",
  "dependencies": {
    "passport-oauth1": "1.x.x",
    "xtraverse": "0.1.x"
  },
  "devDependencies": {
    "make-node": "0.3.x",
    "mocha": "1.x.x",
    "chai": "2.x.x",
    "chai-passport-strategy": "1.x.x"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "scripts": {
    "test": "mocha --require test/bootstrap/node test/*.test.js"
  },
  "readme": "# passport-twitter\n\n[![Build](https://img.shields.io/travis/jaredhanson/passport-twitter.svg)](https://travis-ci.org/jaredhanson/passport-twitter)\n[![Coverage](https://img.shields.io/coveralls/jaredhanson/passport-twitter.svg)](https://coveralls.io/r/jaredhanson/passport-twitter)\n[![Quality](https://img.shields.io/codeclimate/github/jaredhanson/passport-twitter.svg?label=quality)](https://codeclimate.com/github/jaredhanson/passport-twitter)\n[![Dependencies](https://img.shields.io/david/jaredhanson/passport-twitter.svg)](https://david-dm.org/jaredhanson/passport-twitter)\n\n\n\n[Passport](http://passportjs.org/) strategy for authenticating with [Twitter](http://twitter.com/)\nusing the OAuth 1.0a API.\n\nThis module lets you authenticate using Twitter in your Node.js applications.\nBy plugging into Passport, Twitter authentication can be easily and\nunobtrusively integrated into any application or framework that supports\n[Connect](http://www.senchalabs.org/connect/)-style middleware, including\n[Express](http://expressjs.com/).\n\n## Install\n\n    $ npm install passport-twitter\n\n## Usage\n\n#### Create an Application\n\nBefore using `passport-twitter`, you must register an application with Twitter.\nIf you have not already done so, a new application can be created at\n[Twitter Application Management](https://apps.twitter.com/).  Your application\nwill be issued a consumer key (API Key) and consumer secret (API Secret), which\nneed to be provided to the strategy.  You will also need to configure a callback\nURL which matches the route in your application.\n\n#### Configure Strategy\n\nThe Twitter authentication strategy authenticates users using a Twitter account\nand OAuth tokens.  The consumer key and consumer secret obtained when creating\nan application are supplied as options when creating the strategy.  The strategy\nalso requires a `verify` callback, which receives the access token and\ncorresponding secret as arguments, as well as `profile` which contains the\nauthenticated user's Twitter profile.   The `verify` callback must call `cb`\nproviding a user to complete authentication.\n\n    passport.use(new TwitterStrategy({\n        consumerKey: TWITTER_CONSUMER_KEY,\n        consumerSecret: TWITTER_CONSUMER_SECRET,\n        callbackURL: \"http://127.0.0.1:3000/auth/twitter/callback\"\n      },\n      function(token, tokenSecret, profile, cb) {\n        User.findOrCreate({ twitterId: profile.id }, function (err, user) {\n          return cb(err, user);\n        });\n      }\n    ));\n\n#### Authenticate Requests\n\nUse `passport.authenticate()`, specifying the `'twitter'` strategy, to\nauthenticate requests.\n\nFor example, as route middleware in an [Express](http://expressjs.com/)\napplication:\n\n    app.get('/auth/twitter',\n      passport.authenticate('twitter'));\n    \n    app.get('/auth/twitter/callback', \n      passport.authenticate('twitter', { failureRedirect: '/login' }),\n      function(req, res) {\n        // Successful authentication, redirect home.\n        res.redirect('/');\n      });\n\n## Examples\n\nDevelopers using the popular [Express](http://expressjs.com/) web framework can\nrefer to an [example](https://github.com/passport/express-4.x-twitter-example)\nas a starting point for their own web applications.\n\n## Contributing\n\n#### Tests\n\nThe test suite is located in the `test/` directory.  All new features are\nexpected to have corresponding test cases.  Ensure that the complete test suite\npasses by executing:\n\n```bash\n$ make test\n```\n\n#### Coverage\n\nThe test suite covers 100% of the code base.  All new feature development is\nexpected to maintain that level.  Coverage reports can be viewed by executing:\n\n```bash\n$ make test-cov\n$ make view-cov\n```\n\n## Support\n\n#### Funding\n\nThis software is provided to you as open source, free of charge.  The time and\neffort to develop and maintain this project is dedicated by [@jaredhanson](https://github.com/jaredhanson).\nIf you (or your employer) benefit from this project, please consider a financial\ncontribution.  Your contribution helps continue the efforts that produce this\nand other open source software.\n\nFunds are accepted via [PayPal](https://paypal.me/jaredhanson), [Venmo](https://venmo.com/jaredhanson),\nand [other](http://jaredhanson.net/pay) methods.  Any amount is appreciated.\n\n## License\n\n[The MIT License](http://opensource.org/licenses/MIT)\n\nCopyright (c) 2011-2016 Jared Hanson <[http://jaredhanson.net/](http://jaredhanson.net/)>\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/jaredhanson/passport-twitter",
  "_id": "passport-twitter@1.0.4",
  "_from": "passport-twitter@^1.0.4"
}
