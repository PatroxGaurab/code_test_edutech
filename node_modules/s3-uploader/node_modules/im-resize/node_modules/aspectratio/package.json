{
  "name": "aspectratio",
  "version": "2.2.2",
  "description": "Image aspect ratio utility",
  "main": "index.js",
  "scripts": {
    "test": "mocha -R spec test.js",
    "hint": "jshint *.js",
    "watch": "mocha -w -b -c --check-leaks test.js"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:Turistforeningen/node-aspectratio.git"
  },
  "keywords": [
    "photo",
    "image",
    "height",
    "width",
    "aspect",
    "aspect",
    "ratio",
    "resize",
    "crop"
  ],
  "author": {
    "name": "Hans Kristian Flaatten",
    "email": "hans.kristian.flaatten@turistforeningen.no"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/Turistforeningen/node-aspectratio/issues"
  },
  "homepage": "https://github.com/Turistforeningen/node-aspectratio",
  "devDependencies": {
    "jshint": "^2.8.0",
    "mocha": "^2.2.5"
  },
  "readme": "# aspectratio\n\n[![Build status](https://img.shields.io/wercker/ci/55281116a26c78542c01d251.svg \"Build status\")](https://app.wercker.com/project/bykey/90dda5965d63c43c484b2e29c7d4ba92)\n[![NPM downloads](https://img.shields.io/npm/dm/aspectratio.svg \"NPM downloads\")](https://www.npmjs.com/package/aspectratio)\n[![NPM version](https://img.shields.io/npm/v/aspectratio.svg \"NPM version\")](https://www.npmjs.com/package/aspectratio)\n[![Node version](https://img.shields.io/node/v/aspectratio.svg \"Node version\")](https://www.npmjs.com/package/aspectratio)\n[![Dependency status](https://img.shields.io/david/turistforeningen/node-aspectratio.svg \"Dependency status\")](https://david-dm.org/turistforeningen/node-aspectratio)\n\nImage aspect ratio utilities.\n\n## Install\n\n```\nnpm install aspectratio --save\n```\n\n## API\n\n```js\nvar aspect = require('aspectratio');\n```\n\n### crop(**integer** `width`, **integer** `height`, **string** `ratio`)\n\nApply a fixed aspect `ratio` crop without distoring the image aspect ratio.\n\n* **integer** `width` - original image width\n* **integer** `height` - original image height\n* **string** `ratio` - new image ratio\n\n> The `ratio` must be on the following format: `x`:`y` where `x` and `y` are\n> integers. The order of `x` and `z` does not matter and `3:4` will be treated\n> as `4:3`.\n\n> By default #crop() will match the orientation of the original image unless a\n> forced orientation is given on the follwing format: `x`:`y`!`z` where `z` is\n> the orientation (`v` for vertical, or `h` for horizontal).\n\n#### Return\n\nThis will return an `Array` of four values:\n\n1. **integer** `x` - top lef x coordinate\n2. **integer** `y` - top lef y coordinate\n3. **integer** `width` - new image width\n4. **integer** `height` - new image height\n\n#### Example\n\n```js\nvar crop = aspect.crop(2048, 768, '4:3');\n// [512, 768, 1024, 768]\n```\n\n![Cropp with fixed ratio](https://docs.google.com/drawings/d/1Lu8eLqcjjlI0YL7Q-YHg0ttjRC8I8Vkwq6PVXRgxNUo/pub?w=960&h=720)\n\n### resize(**integer** `x`, **integer** `y`, **integer** `maxX`, **integer** `maxY`)\n\nGet resized height and width of an image while perserving the aspect ratio of\nthe image.\n\n* **integer** `x` - original image width\n* **integer** `y` - original image height\n* **integer** `maxX` - max image width\n* **integer** `maxY` - max image height\n\n### Return\n\nReturns an `Array` of the resized `x` and `y` values:\n\n* **integer** `x` - resized image width\n* **integer** `y` - resized image height\n\n## [MIT License](https://github.com/Turistforeningen/node-aspectratio/blob/master/LICENSE)\n",
  "readmeFilename": "README.md",
  "_id": "aspectratio@2.2.2",
  "dist": {
    "shasum": "f7ee684bb1c92f5a4acaa507626b14e2ee138445"
  },
  "_from": "aspectratio@~2.2",
  "_resolved": "https://registry.npmjs.org/aspectratio/-/aspectratio-2.2.2.tgz"
}
