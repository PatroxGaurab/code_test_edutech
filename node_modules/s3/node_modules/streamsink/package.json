{
  "name": "streamsink",
  "version": "1.2.0",
  "description": "pipe to a buffer, then create readable streams from it",
  "main": "index.js",
  "scripts": {
    "test": "node test.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/andrewrk/node-streamsink.git"
  },
  "author": {
    "name": "Andrew Kelley",
    "email": "superjoe30@gmail.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/andrewrk/node-streamsink/issues"
  },
  "homepage": "https://github.com/andrewrk/node-streamsink",
  "readme": "# node-streamsink\n\nPipe a stream to a `StreamSink`, and then you can create a `ReadableStream`,\n`String`, or `Buffer` from the `StreamSink`.\n\n## Usage\n\n```js\nvar StreamSink = require('streamsink');\n\nvar sink = new StreamSink();\n\nfs.createReadStream(\"foo.txt\").pipe(sink);\nsink.on('finish', function() {\n  // sink has now buffered foo.txt\n  sink.createReadStream().pipe(someDestination);\n\n  // or use toString([encoding], [start], [end])\n  console.log(sink.toString('utf8'));\n\n  // or use toBuffer()\n  sink.toBuffer();\n});\n\n// you can also create instances from a list of buffers\nvar sink = StreamSink.fromBufferList([new Buffer(\"aoeu\"), new Buffer(\"foo\")]);\n```\n",
  "readmeFilename": "README.md",
  "_id": "streamsink@1.2.0",
  "dist": {
    "shasum": "efafee9f1e22d3591ed7de3dcaa95c3f5e79f73c"
  },
  "_from": "streamsink@~1.2.0",
  "_resolved": "https://registry.npmjs.org/streamsink/-/streamsink-1.2.0.tgz"
}
