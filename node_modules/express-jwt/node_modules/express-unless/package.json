{
  "name": "express-unless",
  "description": "Conditionally add a middleware to express with some common patterns.",
  "version": "0.3.0",
  "repository": {
    "url": "git://github.com/jfromaniello/express-unless.git"
  },
  "author": {
    "name": "Jos√© F. Romaniello",
    "email": "jfromaniello@gmail.com",
    "url": "http://joseoncode.com"
  },
  "main": "index.js",
  "scripts": {
    "test": "mocha -R spec"
  },
  "dependencies": {},
  "devDependencies": {
    "mocha": "~1.11.0",
    "chai": "~1.7.0"
  },
  "readme": "Conditionally skip a middleware when a condition is met.\n\n## Install\n\n\tnpm i express-unless --save\n\n## Usage\n\nWith existing middlewares:\n\n```javascript\nvar unless = require('express-unless');\n\n\nvar static = express.static(__dirname + '/public');\nstatic.unless = unless;\n\napp.use(static.unless({ method: 'OPTIONS' }));\n```\n\nIf you are authoring a middleware you can support unless as follow:\n\n```javascript\nmodule.exports = function (middlewareOptions) {\n  var mymid = function (req, res, next) {\n\n  };\n\n  mymid.unless = require('express-unless');\n\n  return mymid;\n};\n```\n\n## Current options\n\n-  `method` it could be an string or an array of strings. If the request method match the middleware will not run.\n-  `path` it could be an string, a regexp or an array of any of those. It also could be an array of object which is url and methods key-pairs. If the request path or path and method match, the middleware will not run. Check [Examples](#examples) for usage.\n-  `ext` it could be an string or an array of strings. If the request path ends with one of these extensions the middleware will not run.\n-  `custom` it must be a function that accepts `req` and returns `true` / `false`. If the function returns true for the given request, ithe middleware will not run.\n-  `useOriginalUrl` it should be `true` or `false`, default is `true`. if false, `path` will match against `req.url` instead of `req.originalUrl`. Please refer to [Express API](http://expressjs.com/4x/api.html#request) for the difference between `req.url` and `req.originalUrl`.\n\n\n## Examples\n\nRequire authentication for every request unless the path is index.html.\n\n```javascript\napp.use(requiresAuth.unless({\n  path: [\n    '/index.html',\n    { url: '/', methods: ['GET', 'PUT']  }\n  ]\n}))\n```\n\nAvoid a fstat for request to routes doesnt end with a given extension.\n\n```javascript\napp.use(static.unless(function (req) {\n  var ext = url.parse(req.originalUrl).pathname.substr(-4);\n  return !~['.jpg', '.html', '.css', '.js'].indexOf(ext);\n}));\n```\n\n## License\n\nMIT 2014 - Jose Romaniello\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/jfromaniello/express-unless/issues"
  },
  "homepage": "https://github.com/jfromaniello/express-unless",
  "_id": "express-unless@0.3.0",
  "_from": "express-unless@^0.3.0"
}
